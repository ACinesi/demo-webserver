version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo 'Installing app dependencies...'
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - curl -o kubectl.sha256 https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl.sha256
      - openssl sha1 -sha256 kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client

  pre_build:
    commands:
      - echo 'Check current user'
      - aws sts get-caller-identity
      # - export AWS_SECRET_ACCESS_KEY=f0pAya5gmGBsz66UW//mLqxjRu7sbYvguKZDNZrI
      # - export AWS_ACCESS_KEY_ID=AKIAVWNTLHOE7EWC6HTL
      - echo 'Logging in to Amazon EKS...'
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo 'Check config'
      - kubectl config view --minify
      - echo 'Check kubectl access'
      - kubectl get deployments/webserver-deployment -n webserver-ns
      - echo 'Logging in to Amazon ECR...'
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      # - docker pull $REPOSITORY_URI:$IMAGE_TAG CODEBUILD_BUILD_NUMBER
      
  build:
    commands:
      - echo 'Build started on `date`'
      - echo 'Building the Docker image...'          
      # - docker build --cache-from $REPOSITORY_URI:$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker build -t $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER .
      - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER 

  deploy:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
      - echo Push the latest image to cluster
      - kubectl set image deployment/webserver-deployment webserver=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER -n webserver-ns
      - kubectl rollout status deployment/webserver-deployment -n webserver-ns